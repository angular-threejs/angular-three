import { CUSTOM_ELEMENTS_SCHEMA, Component, ChangeDetectionStrategy } from '@angular/core';
import { extend, NgtGroup } from 'angular-three';
import { injectGLTF } from 'angular-three-soba/loaders';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';

interface <%= className %>GLTFResult extends GLTF {
  nodes: {},
  materials: {}
}

interface <%= className %>Options extends Partial<NgtGroup> {
  /* more options */
}

@Component({
  selector: '<%= selector %>',
  standalone: true,
  template: `
    @if (gltf(); as gltf) {
      <ngt-group [dispose]="null" [parameters]="options()">
      </ngt-group>
    }
  `,
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
  changeDetection: ChangeDetectionStrategy.OnPush,
})
export class <%= className %> {
  options = input({} as <%= className %>Options);

  gltf = injectGLTF(() => '<%= runtimeGltfPath %>') as Signal<<%= className %>GLTFResult | null>;

  constructor() {
    extend({ Group: THREE.Group });
  }
}
